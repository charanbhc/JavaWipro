package in.sp.main.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
public class SecurityConfig {

    @Bean
    public BCryptPasswordEncoder passwordEncoder() {
        return new BCryptPasswordEncoder();
    }

    @Bean
    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
        http
            .authorizeHttpRequests(auth -> auth
                .requestMatchers("/", "/index.html", "/signup", "/signin", "/student/register", "/css/**", "/js/**", "/images/**").permitAll() // Allow access to static pages
                .anyRequest().authenticated() // Other pages require authentication
            )
            .formLogin(login -> login
                .loginPage("/signin") // Set custom login page
                .defaultSuccessUrl("/welcome", true) // Redirect to welcome after login
                .permitAll()
            )
            .logout(logout -> logout
                .logoutUrl("/logout")
                .logoutSuccessUrl("/") // Redirect to index after logout
                .permitAll()
            );

        return http.build();
    }
}
